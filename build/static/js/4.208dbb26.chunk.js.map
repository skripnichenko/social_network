{"version":3,"sources":["components/Dialogs/Dialogs.module.css","HOC/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","DialogItem","path","id","className","c","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","messagesPage","dialogsData","map","d","messagesElements","messagesData","m","dialogs","dialogsItem","messages","value","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,SAAW,4B,qJCG/HC,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMC,OACT,cAACJ,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUE,GAAI,eAHV,GACXC,IAAMN,WAWtC,OADqCO,aAJJ,SAACC,GAAD,MAAY,CACzCJ,OAAQI,EAAMC,KAAKL,UAGcG,CAAoCN,K,qGCA9DS,EAVI,SAACP,GAChB,IAAIQ,EAAO,YAAcR,EAAMS,GAC/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,GAAKD,IAAEE,OAAlC,SACI,cAAC,IAAD,CAASX,GAAIM,EAAb,SAAoBR,EAAMc,UCDvBC,EAJC,SAACf,GACb,OAAO,qBAAKU,UAAWC,IAAEC,OAAlB,SAA2BZ,EAAMgB,W,yCCItCC,EAAcC,YAAiB,IAuC/BC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAZL,SAACpB,GACpB,OAAO,uBAAMsB,SAAUtB,EAAMuB,aAAtB,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAC7Ba,YAAY,qBAAqBC,SAAU,CAACC,IAAUZ,OAE9D,8BACI,kDASGa,EAzCC,SAAC9B,GAEb,IAAI+B,EAAkB/B,EAAMgC,aAAaC,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBL,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAC3F2B,EAAmBpC,EAAMgC,aAAaK,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE7B,OAMpG,OAAKT,EAAMC,OAGP,sBAAKS,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAE6B,YAAlB,SACKT,IAGL,sBAAKrB,UAAWC,IAAE8B,SAAlB,UACI,gCAAML,EAAN,OACA,cAACjB,EAAD,CAAqBG,SAdb,SAACoB,GACjB1C,EAAM2C,YAAYD,EAAME,yBAGF,cAAC,IAAD,CAAU1C,GAAI,Y,iBCC7B2C,4BACXzC,aAhBkB,SAACC,GACnB,MAAO,CACH2B,aAAc3B,EAAM2B,iBAIH,SAACc,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAQpChD,IAFWiD,CAGbf","file":"static/js/4.208dbb26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\",\"messages\":\"Dialogs_messages__1w_Up\"};","import { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport c from './../Dialogs.module.css'\n\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={c.dialog + '' + c.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    \n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport c from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return <div className={c.dialog}>{props.message}</div>\n}\n\nexport default Message;","import React from 'react';\nimport c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.messagesPage.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n    let messagesElements = props.messagesPage.messagesData.map(m => <Message message={m.message} key={m.id} />);\n\n    let addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={'/login'} />\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItem}>\n                {dialogsElements}\n            </div>\n\n            <div className={c.messages}>\n                <div>{messagesElements} </div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} name='newMessageBody'\n                placeholder='Enter your message' validate={[required, maxLength50]} />\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { sendMessageCreator } from './../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}