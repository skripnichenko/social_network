{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{connect}from'react-redux';import{reduxForm}from\"redux-form\";import{CreateField,Input}from'../common/FormsControls/FormsControls';import{required}from'./../../utils/validators/validator';import{login}from'./../../redux/auth-reducer';import{Redirect}from'react-router-dom';import c from'./../common/FormsControls/FormsControls.module.css';var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.login,formData.password,formData.rememberMe,formData.captcha);};if(props.isAuth)return/*#__PURE__*/_jsx(Redirect,{to:'/profile'});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginReduxForm,{captchaUrl:props.captchaUrl,onSubmit:onSubmit})]});};var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error,captchaUrl=_ref.captchaUrl;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[CreateField('Login','login',[required],Input),CreateField('Password','password',[required],Input,{type:'password'}),CreateField(null,'rememberMe',[],Input,{type:'checkbox'}),captchaUrl&&/*#__PURE__*/_jsx(\"img\",{src:captchaUrl}),captchaUrl&&CreateField('Symbols from image','captcha',[required],Input),error&&/*#__PURE__*/_jsx(\"div\",{className:c.formSummaryError,children:error}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Loggin\"})})]});};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var mapStateToProps=function mapStateToProps(state){return{captchaUrl:state.auth.captchaUrl,isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/components/Login/Login.jsx"],"names":["React","connect","reduxForm","CreateField","Input","required","login","Redirect","c","Login","props","onSubmit","formData","password","rememberMe","captcha","isAuth","captchaUrl","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,OAASC,WAAT,CAAsBC,KAAtB,KAAmC,uCAAnC,CACA,OAASC,QAAT,KAAyB,oCAAzB,CACA,OAASC,KAAT,KAAsB,4BAAtB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,CAAP,KAAc,oDAAd,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BF,KAAK,CAACJ,KAAN,CAAYM,QAAQ,CAACN,KAArB,CAA4BM,QAAQ,CAACC,QAArC,CAA+CD,QAAQ,CAACE,UAAxD,CAAoEF,QAAQ,CAACG,OAA7E,EACH,CAFD,CAIA,GAAIL,KAAK,CAACM,MAAV,CAAkB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CAClB,mBAAO,oCACH,6BADG,cAEH,KAAC,cAAD,EAAgB,UAAU,CAAEN,KAAK,CAACO,UAAlC,CAA8C,QAAQ,CAAEN,QAAxD,EAFG,GAAP,CAIH,CAVD,CAYA,GAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAyC,IAAtCC,CAAAA,YAAsC,MAAtCA,YAAsC,CAAxBC,KAAwB,MAAxBA,KAAwB,CAAjBH,UAAiB,MAAjBA,UAAiB,CACvD,mBACI,cAAM,QAAQ,CAAEE,YAAhB,WAEKhB,WAAW,CAAC,OAAD,CAAU,OAAV,CAAmB,CAACE,QAAD,CAAnB,CAA+BD,KAA/B,CAFhB,CAGKD,WAAW,CAAC,UAAD,CAAa,UAAb,CAAyB,CAACE,QAAD,CAAzB,CAAqCD,KAArC,CAA4C,CAAEiB,IAAI,CAAE,UAAR,CAA5C,CAHhB,CAIKlB,WAAW,CAAC,IAAD,CAAO,YAAP,CAAqB,EAArB,CAAyBC,KAAzB,CAAgC,CAAEiB,IAAI,CAAE,UAAR,CAAhC,CAJhB,CAMKJ,UAAU,eAAI,YAAK,GAAG,CAAEA,UAAV,EANnB,CAOKA,UAAU,EAAId,WAAW,CAAC,oBAAD,CAAuB,SAAvB,CAAkC,CAACE,QAAD,CAAlC,CAA8CD,KAA9C,CAP9B,CASKgB,KAAK,eAAI,YAAK,SAAS,CAAEZ,CAAC,CAACc,gBAAlB,UACLF,KADK,EATd,cAYI,kCACI,kCADJ,EAZJ,GADJ,CAkBH,CAnBD,CAqBA,GAAMG,CAAAA,cAAc,CAAGrB,SAAS,CAAC,CAC7BsB,IAAI,CAAE,OADuB,CAAD,CAAT,CAEpBN,SAFoB,CAAvB,CAIA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAQ,CACJT,UAAU,CAAES,KAAK,CAACC,IAAN,CAAWV,UADnB,CAEJD,MAAM,CAAEU,KAAK,CAACC,IAAN,CAAWX,MAFf,CAAR,CAIH,CALD,CAOA,cAAef,CAAAA,OAAO,CAACwB,eAAD,CAAkB,CAAEnB,KAAK,CAALA,KAAF,CAAlB,CAAP,CAAoCG,KAApC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from \"redux-form\";\nimport { CreateField, Input } from '../common/FormsControls/FormsControls';\nimport { required } from './../../utils/validators/validator';\nimport { login } from './../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport c from './../common/FormsControls/FormsControls.module.css'\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.login, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) return <Redirect to={'/profile'} />\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\n    </div>\n}\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {CreateField('Login', 'login', [required], Input)}\n            {CreateField('Password', 'password', [required], Input, { type: 'password' })}\n            {CreateField(null, 'rememberMe', [], Input, { type: 'checkbox' }, )}\n\n            {captchaUrl && <img src={captchaUrl} />}\n            {captchaUrl && CreateField('Symbols from image', 'captcha', [required], Input)}\n\n            {error && <div className={c.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Loggin</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = (state) => {\n    return ({ \n        captchaUrl: state.auth.captchaUrl,\n        isAuth: state.auth.isAuth \n    })\n}\n\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}