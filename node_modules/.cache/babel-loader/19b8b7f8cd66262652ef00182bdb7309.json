{"ast":null,"code":"import { stopSubmit } from 'redux-form';\nimport { profileAPI, usersAPI } from './../API/api';\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  postsData: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 14\n  }, {\n    id: 2,\n    message: 'It is my first post',\n    likesCount: 3\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        postsData: [...state.postsData, {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        }]\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  try {\n    const response = await profileAPI.updateStatus(status);\n\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n\n    ;\n  } catch (error) {\n    alert('Some error occured');\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n\n  ;\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit('edit-profile', {\n      _error: response.data.messages\n    }));\n    return Promise.reject(response.data.messages);\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/skripnichenko/my-app/src/redux/profile-reducer.js"],"names":["stopSubmit","profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","initialState","postsData","id","message","likesCount","profile","status","profileReducer","state","action","type","newPostText","photos","addPostActionCreator","setUserProfile","setStatus","savePhotoSuccess","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode","error","alert","savePhoto","file","saveProfile","getState","auth","_error","messages","Promise","reject"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,cAArC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,SAAS,EAAE,CACP;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,kBAAlB;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GADO,EAEP;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,qBAAlB;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GAFO,CADI;AAKfC,EAAAA,OAAO,EAAE,IALM;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAnB;;AASA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHP,QAAAA,SAAS,EAAE,CAAC,GAAGO,KAAK,CAACP,SAAV,EAAqB;AAC5BC,UAAAA,EAAE,EAAE,CADwB;AAE5BC,UAAAA,OAAO,EAAEM,MAAM,CAACE,WAFY;AAG5BP,UAAAA,UAAU,EAAE;AAHgB,SAArB;AAFR,OAAP;;AAQJ,SAAKP,gBAAL;AAAuB;AACnB,eAAO,EAAE,GAAGW,KAAL;AAAYH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAA5B,SAAP;AACH;;AACD,SAAKN,kBAAL;AAAyB;AACrB,eAAO,EAAE,GAAGS,KAAL;AAAYH,UAAAA,OAAO,EAAE,EAAE,GAAGG,KAAK,CAACH,OAAX;AAAoBO,YAAAA,MAAM,EAAEH,MAAM,CAACG;AAAnC;AAArB,SAAP;AACH;;AACD,SAAKd,UAAL;AAAiB;AACb,eAAO,EAAE,GAAGU,KAAL;AAAYF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAA3B,SAAP;AACH;;AACD;AACI,aAAOE,KAAP;AApBR;;AAqBC;AACJ,CAvBD;;AA2BA,OAAO,MAAMK,oBAAoB,GAAIF,WAAD,KAAkB;AAAED,EAAAA,IAAI,EAAEd,QAAR;AAAkBe,EAAAA;AAAlB,CAAlB,CAA7B;AACP,OAAO,MAAMG,cAAc,GAAIT,OAAD,KAAc;AAAEK,EAAAA,IAAI,EAAEb,gBAAR;AAA0BQ,EAAAA;AAA1B,CAAd,CAAvB;AACP,OAAO,MAAMU,SAAS,GAAIT,MAAD,KAAa;AAAEI,EAAAA,IAAI,EAAEZ,UAAR;AAAoBQ,EAAAA;AAApB,CAAb,CAAlB;AACP,OAAO,MAAMU,gBAAgB,GAAIJ,MAAD,KAAa;AAAEF,EAAAA,IAAI,EAAEX,kBAAR;AAA4Ba,EAAAA;AAA5B,CAAb,CAAzB;AAIP,OAAO,MAAMK,cAAc,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAMzB,QAAQ,CAAC0B,UAAT,CAAoBH,MAApB,CAAvB;AACAC,EAAAA,QAAQ,CAACL,cAAc,CAACM,QAAQ,CAACE,IAAV,CAAf,CAAR;AACH,CAHM;AAKP,OAAO,MAAMC,SAAS,GAAIL,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAM1B,UAAU,CAAC6B,SAAX,CAAqBL,MAArB,CAAvB;AACAC,EAAAA,QAAQ,CAACJ,SAAS,CAACK,QAAQ,CAACE,IAAV,CAAV,CAAR;AACH,CAHM;AAKP,OAAO,MAAME,YAAY,GAAIlB,MAAD,IAAY,MAAOa,QAAP,IAAoB;AACxD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM1B,UAAU,CAAC8B,YAAX,CAAwBlB,MAAxB,CAAvB;;AACA,QAAIc,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,MAAAA,QAAQ,CAACJ,SAAS,CAACT,MAAD,CAAV,CAAR;AACH;;AAAA;AACJ,GALD,CAKE,OAAOoB,KAAP,EAAc;AACZC,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;AAEJ,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AAEnD,QAAMC,QAAQ,GAAG,MAAM1B,UAAU,CAACkC,SAAX,CAAqBC,IAArB,CAAvB;;AACA,MAAIT,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,IAAAA,QAAQ,CAACH,gBAAgB,CAACI,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBV,MAApB,CAAjB,CAAR;AACH;;AAAA;AACJ,CANM;AAQP,OAAO,MAAMkB,WAAW,GAAIzB,OAAD,IAAa,OAAOc,QAAP,EAAiBY,QAAjB,KAA8B;AAClE,QAAMb,MAAM,GAAGa,QAAQ,GAAGC,IAAX,CAAgBd,MAA/B;AACA,QAAME,QAAQ,GAAG,MAAM1B,UAAU,CAACoC,WAAX,CAAuBzB,OAAvB,CAAvB;;AACA,MAAIe,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,IAAAA,QAAQ,CAACF,cAAc,CAACC,MAAD,CAAf,CAAR;AACH,GAFD,MAEO;AACHC,IAAAA,QAAQ,CAAC1B,UAAU,CAAC,cAAD,EAAiB;AAAEwC,MAAAA,MAAM,EAAEb,QAAQ,CAACE,IAAT,CAAcY;AAAxB,KAAjB,CAAX,CAAR;AACA,WAAOC,OAAO,CAACC,MAAR,CAAehB,QAAQ,CAACE,IAAT,CAAcY,QAA7B,CAAP;AACH;AACJ,CATM;AAWP,eAAe3B,cAAf","sourcesContent":["import { stopSubmit } from 'redux-form';\nimport { profileAPI, usersAPI } from './../API/api'\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    postsData: [\n        { id: 1, message: 'Hi, how are you?', likesCount: 14 },\n        { id: 2, message: 'It is my first post', likesCount: 3 }\n    ],\n    profile: null,\n    status: '',\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                postsData: [...state.postsData, {\n                    id: 5,\n                    message: action.newPostText,\n                    likesCount: 0,\n                }],\n            }\n        case SET_USER_PROFILE: {\n            return { ...state, profile: action.profile }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\n        }\n        case SET_STATUS: {\n            return { ...state, status: action.status }\n        }\n        default:\n            return state;\n    };\n};\n\n\n\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\n\n\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    try {\n        const response = await profileAPI.updateStatus(status);\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        };\n    } catch (error) {\n        alert('Some error occured')\n    }\n\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n\n    const response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    };\n};\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit('edit-profile', { _error: response.data.messages }));\n        return Promise.reject(response.data.messages);\n    }\n};\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}