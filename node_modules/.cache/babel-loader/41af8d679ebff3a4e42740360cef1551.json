{"ast":null,"code":"import { getAuthUserData } from './../redux/auth-reducer';\nconst SET_INITIALIZER = 'SET_INITIALIZER';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZER:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const initializedSuccess = () => ({\n  type: SET_INITIALIZER\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  promise.then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/redux/app-reducer.js"],"names":["getAuthUserData","SET_INITIALIZER","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","then"],"mappings":"AAAA,SAASA,eAAT,QAAgC,yBAAhC;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ;AACI,aAAOE,KAAP;AATR;;AAUC;AACJ,CAZD;;AAaA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA3B;AACP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AACAW,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAM;AACfF,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAFD;AAIH,CANM;AAQP,eAAeJ,UAAf","sourcesContent":["import { getAuthUserData } from './../redux/auth-reducer'\n\nconst SET_INITIALIZER = 'SET_INITIALIZER';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case SET_INITIALIZER:\n            return {\n                ...state,\n                initialized: true\n            };\n\n        default:\n            return state;\n    };\n};\nexport const initializedSuccess = () => ({ type: SET_INITIALIZER });\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    promise.then(() => {\n        dispatch(initializedSuccess());\n    })\n\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}