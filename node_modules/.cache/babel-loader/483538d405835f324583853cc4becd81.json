{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/skripnichenko/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport { follow, unfollow, toggleIsFollowingProgress, setCurrentPage, getUsers } from './../../redux/users-reducers';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getAllUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from './../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      let {\n        pageSize\n      } = this.props;\n      this.props.getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    let {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        toggleIsFollowingProgress: this.props.toggleIsFollowingProgress,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getAllUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleIsFollowingProgress,\n  getUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/home/skripnichenko/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","Users","follow","unfollow","toggleIsFollowingProgress","setCurrentPage","getUsers","Preloader","compose","getAllUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,yBAA3B,EAAsDC,cAAtD,EAAsEC,QAAtE,QAAsF,8BAAtF;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,kBAAnC,EAAuDC,cAAvD,EAAuEC,aAAvE,EAAsFC,sBAAtF,QAAoH,+BAApH;;AAEA,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAOzCC,aAPyC,GAOxBC,UAAD,IAAgB;AAC5B,UAAI;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAtB;AACA,WAAKA,KAAL,CAAWd,QAAX,CAAoBY,UAApB,EAAgCC,QAAhC;AACH,KAVwC;AAAA;;AAEzCE,EAAAA,iBAAiB,GAAG;AAChB,QAAI;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAAnC;AACA,SAAKA,KAAL,CAAWd,QAAX,CAAoBgB,WAApB,EAAiCH,QAAjC;AACH;;AAODI,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKH,KAAL,CAAWI,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAwC,IADtC,eAEH,QAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eAAnC;AACI,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QADzB;AAEI,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAF5B;AAGI,QAAA,aAAa,EAAE,KAAKL,aAHxB;AAII,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,KAJtB;AAKI,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWlB,MALvB;AAMI,QAAA,QAAQ,EAAE,KAAKkB,KAAL,CAAWjB,QANzB;AAOI,QAAA,yBAAyB,EAAE,KAAKiB,KAAL,CAAWhB,yBAP1C;AAQI,QAAA,mBAAmB,EAAE,KAAKgB,KAAL,CAAWO;AARpC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAYH;;AAzBwC;;AA2B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEjB,WAAW,CAACoB,KAAD,CADf;AAEHV,IAAAA,QAAQ,EAAET,WAAW,CAACmB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEd,kBAAkB,CAACkB,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEV,cAAc,CAACiB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEX,aAAa,CAACgB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEb,sBAAsB,CAACe,KAAD;AANxC,GAAP;AAQH,CATD;;AAUA,eAAerB,OAAO,CAClBR,OAAO,CAAC4B,eAAD,EACH;AACI1B,EAAAA,MADJ;AACYC,EAAAA,QADZ;AACsBE,EAAAA,cADtB;AAEID,EAAAA,yBAFJ;AAE+BE,EAAAA;AAF/B,CADG,CADW,CAAP,CAMbS,cANa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport { follow, unfollow, toggleIsFollowingProgress, setCurrentPage, getUsers } from './../../redux/users-reducers';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getAllUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from './../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        let {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        let {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n                followingInProgress={this.props.followingInProgress} />\n        </>\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        users: getAllUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\nexport default compose(\n    connect(mapStateToProps,\n        {\n            follow, unfollow, setCurrentPage,\n            toggleIsFollowingProgress, getUsers\n        }),\n)(UsersContainer);"]},"metadata":{},"sourceType":"module"}