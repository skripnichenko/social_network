{"ast":null,"code":"import * as axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': '5e378bfc-ec93-4ae2-861e-c9a11cd868c9'\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n  },\n\n  followUser(id) {\n    return instance.post(`follow/${id}`).then(response => response.data);\n  },\n\n  unfollowUser(id) {\n    return instance.delete(`follow/${id}`).then(response => response.data);\n  },\n\n  getProfile(userId) {\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n\n  savePhoto(photoFile) {\n    const formData = new FormData();\n    formData.append('image', photoFile);\n    return instance.put('profile/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n\n  saveProfile(profile) {\n    debugger;\n    return instance.put(`profile`, profile);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n\n  login(email, password, rememberMe = false, captcha = null) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`security/get-captcha-url`);\n  }\n\n};","map":{"version":3,"sources":["/home/skripnichenko/my-app/src/API/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","id","post","unfollowUser","delete","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '5e378bfc-ec93-4ae2-861e-c9a11cd868c9',\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n    },\n    followUser(id) {\n        return instance.post(`follow/${id}`).then(response => response.data)\n    },\n    unfollowUser(id) {\n        return instance.delete(`follow/${id}`).then(response => response.data)\n    },\n    getProfile(userId) {\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n\n        const formData = new FormData();\n        formData.append('image', photoFile);\n\n        return instance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        debugger\n        return instance.put(`profile`, profile);\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n   getCaptchaUrl() {\n       return instance.get(`security/get-captcha-url`);\n   }\n}"]},"metadata":{},"sourceType":"module"}