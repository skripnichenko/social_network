{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/skripnichenko/social_network/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from \"redux-form\";\nimport { CreateField, Input } from '../common/FormsControls/FormsControl';\nimport { required } from './../../utils/validators/validator';\nimport { login } from './../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport c from './../common/FormsControls/FormsControls.module.css';\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.login, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/profile'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      captchaUrl: props.captchaUrl,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Login;\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [CreateField('Login', 'login', [required], Input), CreateField('Password', 'password', [required], Input, {\n      type: 'password'\n    }), CreateField(null, 'rememberMe', [], Input, {\n      type: 'checkbox'\n    }), captchaUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: captchaUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 28\n    }, this), captchaUrl && CreateField('Symbols from image', 'captcha', [required], Input), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Loggin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = state => {\n  return {\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/components/Login/Login.jsx"],"names":["React","connect","Field","reduxForm","CreateField","Input","required","login","Redirect","c","Login","props","onSubmit","formData","password","rememberMe","captcha","isAuth","captchaUrl","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","mapStateToProps","state","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sCAAnC;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,CAAP,MAAc,oDAAd;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACJ,KAAN,CAAYM,QAAQ,CAACN,KAArB,EAA4BM,QAAQ,CAACC,QAArC,EAA+CD,QAAQ,CAACE,UAAxD,EAAoEF,QAAQ,CAACG,OAA7E;AACH,GAFD;;AAIA,MAAIL,KAAK,CAACM,MAAV,EAAkB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAClB,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEN,KAAK,CAACO,UAAlC;AAA8C,MAAA,QAAQ,EAAEN;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAVD;;KAAMF,K;;AAYN,MAAMS,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBH,EAAAA;AAAvB,CAAD,KAAyC;AACvD,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA,eAEKhB,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACE,QAAD,CAAnB,EAA+BD,KAA/B,CAFhB,EAGKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACE,QAAD,CAAzB,EAAqCD,KAArC,EAA4C;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAA5C,CAHhB,EAIKlB,WAAW,CAAC,IAAD,EAAO,YAAP,EAAqB,EAArB,EAAyBC,KAAzB,EAAgC;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAAhC,CAJhB,EAMKJ,UAAU,iBAAI;AAAK,MAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,YANnB,EAOKA,UAAU,IAAId,WAAW,CAAC,oBAAD,EAAuB,SAAvB,EAAkC,CAACE,QAAD,CAAlC,EAA8CD,KAA9C,CAP9B,EASKgB,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAEZ,CAAC,CAACc,gBAAlB;AAAA,gBACLF;AADK;AAAA;AAAA;AAAA;AAAA,YATd,eAYI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnBD;;MAAMF,S;AAqBN,MAAMK,cAAc,GAAGrB,SAAS,CAAC;AAC7BsB,EAAAA,IAAI,EAAE;AADuB,CAAD,CAAT,CAEpBN,SAFoB,CAAvB;;AAIA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAQ;AACJT,IAAAA,UAAU,EAAES,KAAK,CAACC,IAAN,CAAWV,UADnB;AAEJD,IAAAA,MAAM,EAAEU,KAAK,CAACC,IAAN,CAAWX;AAFf,GAAR;AAIH,CALD;;AAOA,eAAehB,OAAO,CAACyB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAoCG,KAApC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from \"redux-form\";\nimport { CreateField, Input } from '../common/FormsControls/FormsControl';\nimport { required } from './../../utils/validators/validator';\nimport { login } from './../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport c from './../common/FormsControls/FormsControls.module.css'\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.login, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) return <Redirect to={'/profile'} />\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit} />\n    </div>\n}\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {CreateField('Login', 'login', [required], Input)}\n            {CreateField('Password', 'password', [required], Input, { type: 'password' })}\n            {CreateField(null, 'rememberMe', [], Input, { type: 'checkbox' }, )}\n\n            {captchaUrl && <img src={captchaUrl} />}\n            {captchaUrl && CreateField('Symbols from image', 'captcha', [required], Input)}\n\n            {error && <div className={c.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Loggin</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm);\n\nconst mapStateToProps = (state) => {\n    return ({ \n        captchaUrl: state.auth.captchaUrl,\n        isAuth: state.auth.isAuth \n    })\n}\n\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}