{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/skripnichenko/my-app/src/components/common/Paginator/Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport c from './Paginator.module.css';\nimport cn from 'classnames';\n\nlet Paginator = ({\n  currentPage,\n  totalItemsCount,\n  pageSize,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionSize * portionNumber;\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(c.paginator),\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn({\n          [c.selectedPage]: currentPage === p\n        }, c.pageNumber),\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/home/skripnichenko/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","c","cn","Paginator","currentPage","totalItemsCount","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,IAAIC,SAAS,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA+E;AAAA;;AAC3F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIM,KAAK,GAAG,EAAZ;AAEA,MAAIC,YAAY,GAAGH,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBN,WAAtB,GAAoC,CAAhE;AACA,MAAIS,sBAAsB,GAAGT,WAAW,GAAGM,aAA3C;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,UAArB,EAAiCS,CAAC,EAAlC,EAAsC;AAClCN,IAAAA,KAAK,CAACO,IAAN,CAAWD,CAAX;AACH;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAEhB,EAAE,CAACD,CAAC,CAACmB,SAAH,CAAlB;AAAA,eACDN,aAAa,GAAG,CAAhB,iBACF;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIEF,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIN,qBAAL,IAA8BM,CAAC,IAAEL,sBADjD,EAEIM,GAFJ,CAESD,CAAD,IAAO;AACZ,0BAAO;AAAM,QAAA,SAAS,EAAGpB,EAAE,CAAC;AACxB,WAACD,CAAC,CAACuB,YAAH,GAAkBpB,WAAW,KAAKkB;AADV,SAAD,EAExBrB,CAAC,CAACwB,UAFsB,CAApB;AAIM,QAAA,OAAO,EAAGC,CAAD,IAAO;AACZnB,UAAAA,aAAa,CAACe,CAAD,CAAb;AACH,SANP;AAAA,kBAMUA;AANV,SAGWA,CAHX;AAAA;AAAA;AAAA;AAAA,cAAP;AAOH,KAVA,CAJF,EAeDT,YAAY,GAAGC,aAAf,iBACE;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBH,CA9BD;;GAAIX,S;;KAAAA,S;AAgCJ,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport c from './Paginator.module.css';\nimport cn from 'classnames'\n\nlet Paginator = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionSize * portionNumber;\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div className={cn(c.paginator)}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [c.selectedPage]: currentPage === p\n                }, c.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n    </div>\n}\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}