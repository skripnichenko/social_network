{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/skripnichenko/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = props => {\n  let dialogsElements = props.messagesPage.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 67\n  }, this));\n  let messagesElements = props.messagesPage.messagesData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 69\n  }, this));\n\n  let addNewMessage = value => {\n    props.sendMessage(value.newMessageBody);\n  };\n\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.dialogsItem,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [messagesElements, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddMessageFormRedux, {\n        onSubmit: addNewMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: Textarea,\n        name: \"newMessageBody\",\n        placeholder: \"Enter your message\",\n        validate: [required, maxLength50]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = AddMessageForm;\nconst AddMessageFormRedux = reduxForm({\n  form: 'dialogAddMessageForm'\n})(AddMessageForm);\nexport default Dialogs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"AddMessageForm\");","map":{"version":3,"sources":["/home/skripnichenko/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","c","DialogItem","Message","Redirect","Field","reduxForm","Textarea","maxLengthCreator","required","maxLength50","Dialogs","props","dialogsElements","messagesPage","dialogsData","map","d","name","id","messagesElements","messagesData","m","message","addNewMessage","value","sendMessage","newMessageBody","isAuth","dialogs","dialogsItem","messages","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,uCAAzB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,kCAA3C;AAEA,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,EAAD,CAApC;;AAEA,MAAMG,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,eAAe,GAAGD,KAAK,CAACE,YAAN,CAAmBC,WAAnB,CAA+BC,GAA/B,CAAmCC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAAqC,IAAA,EAAE,EAAED,CAAC,CAACE;AAA3C,KAA+BF,CAAC,CAACE,EAAjC;AAAA;AAAA;AAAA;AAAA,UAAxC,CAAtB;AACA,MAAIC,gBAAgB,GAAGR,KAAK,CAACE,YAAN,CAAmBO,YAAnB,CAAgCL,GAAhC,CAAoCM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC;AAApB,KAAkCD,CAAC,CAACH,EAApC;AAAA;AAAA;AAAA;AAAA,UAAzC,CAAvB;;AAEA,MAAIK,aAAa,GAAIC,KAAD,IAAW;AAC3Bb,IAAAA,KAAK,CAACc,WAAN,CAAkBD,KAAK,CAACE,cAAxB;AACH,GAFD;;AAIA,MAAI,CAACf,KAAK,CAACgB,MAAX,EAAmB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAEnB,sBACI;AAAK,IAAA,SAAS,EAAE3B,CAAC,CAAC4B,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE5B,CAAC,CAAC6B,WAAlB;AAAA,gBACKjB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAEZ,CAAC,CAAC8B,QAAlB;AAAA,8BACI;AAAA,mBAAMX,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAEI;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvBD;;KAAMb,O;;AAyBN,MAAMqB,cAAc,GAAIpB,KAAD,IAAW;AAC9B,sBAAO;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACqB,YAAtB;AAAA,4BACH;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE1B,QAAlB;AAA4B,QAAA,IAAI,EAAC,gBAAjC;AACI,QAAA,WAAW,EAAC,oBADhB;AACqC,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWC,WAAX;AAD/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAKH;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CAVD;;MAAMsB,c;AAYN,MAAME,mBAAmB,GAAG5B,SAAS,CAAC;AAClC6B,EAAAA,IAAI,EAAE;AAD4B,CAAD,CAAT,CAEzBH,cAFyB,CAA5B;AAIA,eAAerB,OAAf","sourcesContent":["import React from 'react';\nimport c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.messagesPage.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n    let messagesElements = props.messagesPage.messagesData.map(m => <Message message={m.message} key={m.id} />);\n\n    let addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={'/login'} />\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItem}>\n                {dialogsElements}\n            </div>\n\n            <div className={c.messages}>\n                <div>{messagesElements} </div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} name='newMessageBody'\n                placeholder='Enter your message' validate={[required, maxLength50]} />\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}