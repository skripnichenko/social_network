{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/skripnichenko/social_network/src/components/Profile/ProfileInfo/ProfileInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport c from './ProfileInfo.module.css';\nimport Preloader from './../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from './../../../assets/images/users.png';\nimport ProfileDataFormReduxForm from './ProfileDataForm';\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile\n}) => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n\n  const onSubmit = formData => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  const onMainPhotoSelected = e => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.descriptionblock,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.photos.large || userPhoto,\n        className: c.mainPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'file',\n        onChange: onMainPhotoSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(ProfileDataFormReduxForm, {\n        initialValues: profile,\n        profile: profile,\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(ProfileData, {\n        profile: profile,\n        isOwner: isOwner,\n        goToEditMode: () => setEditMode(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ProfileStatusWithHooks, {\n        status: status,\n        updateStatus: updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileInfo, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = ProfileInfo;\n\nconst Contact = ({\n  contactTitle,\n  contactValue\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: contactTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }, this), \": \", contactValue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Contact;\n\nconst ProfileData = ({\n  profile,\n  isOwner,\n  goToEditMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToEditMode,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), \": \", profile.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Looking for a job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), \": \", profile.lookingForAJob ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), profile.lookingForAJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"My professional skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \": \", profile.lookingForAJobDescription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"About me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), \": \", profile.aboutMe]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), \": \", Object.keys(profile.contacts).map(key => {\n        return /*#__PURE__*/_jsxDEV(Contact, {\n          contactTitle: key,\n          contactValue: profile.contacts[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_c3 = ProfileData;\nexport default ProfileInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProfileInfo\");\n$RefreshReg$(_c2, \"Contact\");\n$RefreshReg$(_c3, \"ProfileData\");","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/components/Profile/ProfileInfo/ProfileInfo.jsx"],"names":["React","useState","c","Preloader","ProfileStatusWithHooks","userPhoto","ProfileDataFormReduxForm","ProfileInfo","profile","status","updateStatus","isOwner","savePhoto","saveProfile","editMode","setEditMode","onSubmit","formData","then","onMainPhotoSelected","e","target","files","length","descriptionblock","photos","large","mainPhoto","Contact","contactTitle","contactValue","contact","ProfileData","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport c from './ProfileInfo.module.css';\nimport Preloader from './../../common/Preloader/Preloader'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from './../../../assets/images/users.png';\nimport ProfileDataFormReduxForm from './ProfileDataForm';\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n    const [editMode, setEditMode] = useState(false);\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            ()=> {setEditMode(false)}\n        )\n    }\n\n    if (!profile) {\n        return <Preloader />\n    }\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    return (\n        <div>\n            <div className={c.descriptionblock}>\n                <img src={profile.photos.large || userPhoto} className={c.mainPhoto} />\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\n                {editMode\n                    ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\n\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n    return <div className={c.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n    return <div>\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n        <div>\n            <b>Full name</b>: {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {profile.lookingForAJob ? 'Yes' : 'No'}\n        </div>\n        {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\n            </div>\n        }\n        <div>\n            <b>About me</b>: {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n        </div>\n    </div>\n}\n\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}