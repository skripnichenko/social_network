{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import c from'./Dialogs.module.css';import DialogItem from'./DialogItem/DialogItem';import Message from'./Message/Message';import{Redirect}from'react-router-dom';import{Field,reduxForm}from'redux-form';import{Textarea}from'../common/FormsControls/FormsControls';import{maxLengthCreator,required}from'../../utils/validators/validator';var maxLength50=maxLengthCreator(50);var Dialogs=function Dialogs(props){var dialogsElements=props.messagesPage.dialogsData.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{name:d.name,id:d.id},d.id);});var messagesElements=props.messagesPage.messagesData.map(function(m){return/*#__PURE__*/_jsx(Message,{message:m.message},m.id);});var addNewMessage=function addNewMessage(value){props.sendMessage(value.newMessageBody);};if(!props.isAuth)return/*#__PURE__*/_jsx(Redirect,{to:'/login'});return/*#__PURE__*/_jsxs(\"div\",{className:c.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:c.dialogsItem,children:dialogsElements}),/*#__PURE__*/_jsxs(\"div\",{className:c.messages,children:[/*#__PURE__*/_jsxs(\"div\",{children:[messagesElements,\" \"]}),/*#__PURE__*/_jsx(AddMessageFormRedux,{onSubmit:addNewMessage})]})]});};var AddMessageForm=function AddMessageForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{component:Textarea,name:\"newMessageBody\",placeholder:\"Enter your message\",validate:[required,maxLength50]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Send\"})})]});};var AddMessageFormRedux=reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);export default Dialogs;","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/components/Dialogs/Dialogs.jsx"],"names":["React","c","DialogItem","Message","Redirect","Field","reduxForm","Textarea","maxLengthCreator","required","maxLength50","Dialogs","props","dialogsElements","messagesPage","dialogsData","map","d","name","id","messagesElements","messagesData","m","message","addNewMessage","value","sendMessage","newMessageBody","isAuth","dialogs","dialogsItem","messages","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,QAAT,KAAyB,uCAAzB,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,kCAA3C,CAEA,GAAMC,CAAAA,WAAW,CAAGF,gBAAgB,CAAC,EAAD,CAApC,CAEA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAEvB,GAAIC,CAAAA,eAAe,CAAGD,KAAK,CAACE,YAAN,CAAmBC,WAAnB,CAA+BC,GAA/B,CAAmC,SAAAC,CAAC,qBAAI,KAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAAqC,EAAE,CAAED,CAAC,CAACE,EAA3C,EAA+BF,CAAC,CAACE,EAAjC,CAAJ,EAApC,CAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAGR,KAAK,CAACE,YAAN,CAAmBO,YAAnB,CAAgCL,GAAhC,CAAoC,SAAAM,CAAC,qBAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,EAAkCD,CAAC,CAACH,EAApC,CAAJ,EAArC,CAAvB,CAEA,GAAIK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC3Bb,KAAK,CAACc,WAAN,CAAkBD,KAAK,CAACE,cAAxB,EACH,CAFD,CAIA,GAAI,CAACf,KAAK,CAACgB,MAAX,CAAmB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAEnB,mBACI,aAAK,SAAS,CAAE3B,CAAC,CAAC4B,OAAlB,wBACI,YAAK,SAAS,CAAE5B,CAAC,CAAC6B,WAAlB,UACKjB,eADL,EADJ,cAKI,aAAK,SAAS,CAAEZ,CAAC,CAAC8B,QAAlB,wBACI,uBAAMX,gBAAN,OADJ,cAEI,KAAC,mBAAD,EAAqB,QAAQ,CAAEI,aAA/B,EAFJ,GALJ,GADJ,CAYH,CAvBD,CAyBA,GAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACpB,KAAD,CAAW,CAC9B,mBAAO,cAAM,QAAQ,CAAEA,KAAK,CAACqB,YAAtB,wBACH,kCACI,KAAC,KAAD,EAAO,SAAS,CAAE1B,QAAlB,CAA4B,IAAI,CAAC,gBAAjC,CACI,WAAW,CAAC,oBADhB,CACqC,QAAQ,CAAE,CAACE,QAAD,CAAWC,WAAX,CAD/C,EADJ,EADG,cAKH,kCACI,gCADJ,EALG,GAAP,CASH,CAVD,CAYA,GAAMwB,CAAAA,mBAAmB,CAAG5B,SAAS,CAAC,CAClC6B,IAAI,CAAE,sBAD4B,CAAD,CAAT,CAEzBH,cAFyB,CAA5B,CAIA,cAAerB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.messagesPage.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n    let messagesElements = props.messagesPage.messagesData.map(m => <Message message={m.message} key={m.id} />);\n\n    let addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={'/login'} />\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItem}>\n                {dialogsElements}\n            </div>\n\n            <div className={c.messages}>\n                <div>{messagesElements} </div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} name='newMessageBody'\n                placeholder='Enter your message' validate={[required, maxLength50]} />\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}