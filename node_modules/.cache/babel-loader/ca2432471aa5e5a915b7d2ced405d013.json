{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/skripnichenko/social_network/src/HOC/withAuthRedirect.js\";\nimport { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 44\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n  });\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/HOC/withAuthRedirect.js"],"names":["Redirect","React","connect","withAuthRedirect","Component","RedirectComponent","render","props","isAuth","mapStateToPropsForRedirect","state","auth","ConnectedAuthRedirectComponent"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCJ,KAAK,CAACG,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACxB,0BAAO,QAAC,SAAD,OAAe,KAAKD;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAMhD,MAAIE,0BAA0B,GAAIC,KAAD,KAAY;AACzCF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADsB,GAAZ,CAAjC;;AAIA,MAAII,8BAA8B,GAAGV,OAAO,CAACO,0BAAD,CAAP,CAAoCJ,iBAApC,CAArC;AACA,SAAOO,8BAAP;AACH,CAbM","sourcesContent":["import { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}