{"ast":null,"code":"import { updateObjectInArray } from '../utils/object-helpers';\nimport { usersAPI } from '../API/api';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USER_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUserCount = totalUsersCount => ({\n  type: SET_TOTAL_USER_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (currentPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(currentPage));\n    let data = await usersAPI.getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUserCount(data.totalCount));\n  };\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleIsFollowingProgress(true, userId));\n  let response = await apiMethod(userId);\n\n  if (response.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  ;\n  dispatch(toggleIsFollowingProgress(false, userId));\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/home/skripnichenko/social_network/src/redux/users-reducers.js"],"names":["updateObjectInArray","usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUserCount","toggleIsFetching","toggleIsFollowingProgress","getUsers","dispatch","data","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","response","resultCode","follow","followUser","bind","unfollow","unfollowUser"],"mappings":"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","sourcesContent":["import { updateObjectInArray } from '../utils/object-helpers';\nimport { usersAPI } from '../API/api'\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true })\n                }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false })\n            }\n        case SET_USERS:\n            return { ...state, users: action.users };\n\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage };\n\n        case SET_TOTAL_USER_COUNT:\n            return { ...state, totalUsersCount: action.totalUsersCount };\n\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching };\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            };\n\n        default:\n            return state;\n    };\n};\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setTotalUserCount = (totalUsersCount) => ({ type: SET_TOTAL_USER_COUNT, totalUsersCount });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\n\nexport const getUsers = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n        let data = await usersAPI.getUsers(currentPage, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUserCount(data.totalCount));\n\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    };\n    dispatch(toggleIsFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess)\n    }\n};\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess)\n    }\n}\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}