{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/skripnichenko/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from './../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userID;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('./login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.match.params.userID !== prevProps.match.params.userID) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      saveProfile: this.props.saveProfile,\n      isOwner: !this.props.match.params.userID,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      savePhoto: this.props.savePhoto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/home/skripnichenko/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getUserProfile","getStatus","updateStatus","savePhoto","saveProfile","withRouter","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","userID","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,YAApC,EAAkDC,SAAlD,EAA6DC,WAA7D,QAAgF,+BAAhF;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAGA,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA+C;AAE3CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAArC;;AACA,QAAI,CAACJ,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWI,gBAApB;;AACA,UAAI,CAACL,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACH;AACJ;;AAED,SAAKN,KAAL,CAAWZ,cAAX,CAA0BW,MAA1B;AACA,SAAKC,KAAL,CAAWX,SAAX,CAAqBU,MAArB;AACH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,cAAL;AACH;;AAEDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxB,KAAmCM,SAAS,CAACR,KAAV,CAAgBC,MAAhB,CAAuBC,MAA9D,EAAsE;AAClE,WAAKL,cAAL;AACH;AAEJ;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,OAAa,KAAKX,KAAlB;AAAyB,MAAA,WAAW,EAAE,KAAKA,KAAL,CAAWR,WAAjD;AAA8D,MAAA,OAAO,EAAE,CAAC,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAhG;AAAwG,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWY,OAA5H;AAAqI,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAAxJ;AAAgK,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWV,YAAzL;AAAuM,MAAA,SAAS,EAAE,KAAKU,KAAL,CAAWT;AAA7N;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AA/B0C;;AAmC/C,IAAIuB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BT,EAAAA,gBAAgB,EAAEW,KAAK,CAACE,IAAN,CAAWlB,MAHC;AAI9BmB,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAOA,eAAevB,OAAO,CAClBR,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA,YAA7B;AAA2CC,EAAAA,SAA3C;AAAsDC,EAAAA;AAAtD,CAAlB,CADW,EAElBC,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from './../../redux/profile-reducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userID;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('./login')\n            }\n        }\n\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID) {\n            this.refreshProfile();\n        }\n            \n    }\n\n    render() {\n        return (\n            <Profile {...this.props} saveProfile={this.props.saveProfile} isOwner={!this.props.match.params.userID} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto} />\n\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}