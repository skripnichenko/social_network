{"version":3,"sources":["HOC/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Posts.module.css","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","Posts","className","c","posts","item","src","alt","message","likesCount","MyPosts","memo","postsElements","postsData","map","p","id","postsBlock","AddNewPostReduxForm","onSubmit","value","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editeMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileDataFormReduxForm","profile","error","s","formSummaryError","CreateField","Input","type","Object","keys","contacts","key","contact","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","editMode","Preloader","descriptionblock","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Profile","ProfileContainer","userId","match","params","userID","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.48cd197e.chunk.js","sourcesContent":["import { Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__3wY_j\",\"descriptionblock\":\"ProfileInfo_descriptionblock__1bJj2\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1Fgjo\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__R6Jlo\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__1dvl9\"};","import React from 'react';\nimport c from './Posts.module.css';\n\nconst Posts = (props) => {\n    return (\n        <div className={c.posts}>\n            <div className={c.item}>\n                <img src='https://st2.depositphotos.com/1006472/5665/i/600/depositphotos_56658541-stock-photo-faceless-hooded-anonymous-computer-hacker.jpg' alt=''></img>\n                {props.message}\n                <div>\n                    <span>likes {props.likesCount}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Posts;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport c from './MyPosts.module.css';\nimport Posts from './Posts/Posts';\nimport { maxLengthCreator, required } from './../../../utils/validators/validator';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst AddNewPostForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} name='newPostText'\n                 placeholder='Post message' />\n        </div>\n        <div>\n            <button>Add post</button>\n        </div>\n    </form>\n}\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = props.postsData.map(p => <Posts key={p.id} message={p.message} likesCount={p.likesCount} />);\n\n    let onAddPost = (value) => {\n        props.addPost(value.newPostText);\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostReduxForm onSubmit={onAddPost} />\n            <div className={c.posts}>\n                {postsElements}\n            </div>\n\n        </div>\n    )\n})\n\n\nconst AddNewPostReduxForm = reduxForm({\n    form: 'ProfileAddNewPostForm'\n})(AddNewPostForm)\n\nexport default MyPosts;","import React from 'react';\nimport MyPosts from './MyPosts';\nimport {  addPostActionCreator } from './../../../redux/profile-reducer';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editeMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n    return <div>\n        {!editeMode &&\n            <div>\n                <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\n            </div>\n        }\n        {editeMode &&\n            <div>\n                <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status} />\n            </div>\n        }\n    </div>\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { CreateField, Input, Textarea } from './../../common/FormsControls/FormsControls';\nimport c from './ProfileInfo.module.css';\nimport s from './../../common/FormsControls/FormsControls.module.css';\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n    return <form onSubmit={handleSubmit}>\n        <div><button>Save</button></div>\n        {error && <div className={s.formSummaryError}>\n                {error}\n            </div>}\n        <div>\n            <b>Full name</b>: {CreateField('Full name', 'fullName', [], Input)}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {CreateField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n        </div>\n\n        <div>\n            <b>My professional skills</b>: {CreateField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\n        </div>\n\n        <div>\n            <b>About me</b>: {CreateField('About me', 'aboutMe', [], Textarea)}\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={c.contact}>\n                    <b>{key}: {CreateField(key, 'contacts.' + key, [], Input)} </b>\n                </div>\n            })}\n        </div>\n    </form>\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\nimport c from './ProfileInfo.module.css';\nimport Preloader from './../../common/Preloader/Preloader'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from './../../../assets/images/users.png';\nimport ProfileDataFormReduxForm from './ProfileDataForm';\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\n    const [editMode, setEditMode] = useState(false);\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            ()=> {setEditMode(false)}\n        )\n    }\n\n    if (!profile) {\n        return <Preloader />\n    }\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    return (\n        <div>\n            <div className={c.descriptionblock}>\n                <img src={profile.photos.large || userPhoto} className={c.mainPhoto} />\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\n                {editMode\n                    ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n                    : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\n\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n    return <div className={c.contact}><b>{contactTitle}</b>: {contactValue}</div>\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n    return <div>\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\n        <div>\n            <b>Full name</b>: {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job</b>: {profile.lookingForAJob ? 'Yes' : 'No'}\n        </div>\n        {profile.lookingForAJob &&\n            <div>\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\n            </div>\n        }\n        <div>\n            <b>About me</b>: {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n        </div>\n    </div>\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\n             <MyPostsContainer />\n        </div>\n       \n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from './../../redux/profile-reducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userID;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('./login')\n            }\n        }\n\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID) {\n            this.refreshProfile();\n        }\n            \n    }\n\n    render() {\n        return (\n            <Profile {...this.props} saveProfile={this.props.saveProfile} isOwner={!this.props.match.params.userID} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto} />\n\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}